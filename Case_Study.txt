1. Display the first name and department number for all customers whose last name is “De Haan”  (Employees table).

MariaDB [case_study]> select first_name, last_name, department_id from employees where last_name = "De Haan";

2. Display all data from Departments table for Sales department (department_name column).

MariaDB [case_study]> select * from departments where department_name = "Sales";

3. Display the first name, last_name, department number and salary for all employees who earn more than 9700 (Employees table). 

MariaDB [case_study]> select first_name, last_name, department_id, salary from employees where salary > 9700;

4. Display all data from Employees table for all employees who was hired before January 1st, 1992. 

MariaDB [case_study]> select * from employees where hire_date < "1992-01-01";

5. Display the employee number, first name, job id and department number for all employees whose 
department number equals 20, 60 or 80 (Employees table).

MariaDB [case_study]> select employee_id, first_name, job_id, department_id from employees where department_id not in (20, 60, 80);

6. Display the employee number, first name, job id and department number for all employees whose 
department number is not equal to 20, 60 and 80 (Employees table).

MariaDB [case_study]> select employee_id, first_name, job_id, department_id from employees where department_id in (20, 60, 80);

7. Display the last name, phone number, salary and manager number, for all employees whose 
manager number equals 100, 102 or 103 (Employees table).

MariaDB [case_study]> select last_name, phone_number, salary, manager_id from employees where manager_id in(100, 102, 103);

8. Display the first name and salary for all employees whose first name ends with an e (Employees 
table)

MariaDB [case_study]> select first_name, salary from employees where first_name like "%e";

9. Display the last name and department number for all employees where the second letter in their 
last name is i (Employees table).

MariaDB [case_study]> select last_name, department_id from employees where last_name like "_i%";

10. Display all data from Employees table for all employees who have the letters : L, J, or H in their 
last name. Sort the query in descending order by salary.

MariaDB [case_study]> select * from employees where last_name like "%l%" or last_name like "%j%" or last_name like "%h%" order by salary desc;

11. Display the first name, hire date, salary and department number for all employees whose first name doesn’t have the letter A. Sort the query in ascending order by department number (Employees table).

MariaDB [case_study]> select first_name, hire_date, salary , department_id from employees where first_name not like"%a%" order by department_id;

12. Display all data from Employees table for all employees without any department number.

MariaDB [case_study]> select employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, commission_pct, manager_id from employees;

13. Display the first name concatenated with the last name, separated by comma, and salary, for all employees whose salary not in the range between 7000 and 15000. Sort the query in ascending order by the full name (Employees table).

MariaDB [case_study]> select concat(first_name," , ",last_name) as full_name, salary from employees where salary not between 7000 and 15000 order by full_name;

14. Display the first name concatenated with the last name, separated by comma, the phone number concatenated with the email address, separated by hyphen, and salary, for all employees whose salary is in the range of 5000 and 10000. Name the column headings: “FULL_NAME”, “CONTACTS” and “SAL” respectively (Employees table). 

MariaDB [case_study]> select concat(first_name," , ",last_name) as FULL_NAME, concat(phone_number,"/",email) as CONTACTS, salary as SAL from employees where salary between 5000 and 10000;

15. Display all data from Employees table for all employees whose: salary is in the range of 6000 and 800 and their commission is not null or department number is not equal to 80, 90 and 100 and their hire date is before January 1st, 1990. 

MariaDB [case_study]> select * from employees where salary between 6000 and 8000 AND commission_pct is not null OR department_id not in(80,90,100) and hire_date < "19
90-01-01";

16. Display last name, job id and hire date for all employees who was hired during December 12th, 1995 and April 17th, 1998.

17. Display the first name concatenated with last name, hire date, commission percentage, telephone, and salary for all employees whose salary is greater than 10000 or the third digit in their phone number equals 5. Sort the query in a descending order by the first name (Employees table).

MariaDB [case_study]> select concat(first_name," ",last_name) as full_name, hire_date, commission_pct, phone_number, salary from employees where salary > 10000 OR phone_number like"__5%" order by full_name desc;

18. Display the last name and salary for all employees who earn more than 12000 (Employees table).

MariaDB [case_study]> select last_name, salary from employees where salary > 12000;

19. Display the last name and department number for all employees whose department number is equal to 50 or 80. Perform this exercise once by using the IN operator, once by using the OR operator.

MariaDB [case_study]> select last_name, department_id from employees where department_id in (50, 80);

MariaDB [case_study]> select last_name, department_id from employees where department_id = 50 or department_id = 80;


20. Display the first name and salary for all employees who doesn’t earn any commission.

MariaDB [case_study]> select first_name, salary from employees where commission_pct is null;

21. Display the first name, salary, and manager number for all employees whose manager number is not null

MariaDB [case_study]> select first_name, salary, manager_id from employees where manager_id is not null;

1. Display the first name in lower case and last name in upper case, for all employees whose employee number is in the range between 80 and 150. 

MariaDB [case_study]> select employee_id, lower(first_name), upper(last_name) from employees where employee_id between 80 and 150;

2. Display the first name and last name for all employees whose family name is King, perform this exercise with a case-insensitive search (regardless of the capitalization used for the values within last name column). 

MariaDB [case_study]> select first_name, last_name from employees where last_name = "King";

3. Generating new email address 

a. For each employee, display the first name, last name, and email address. The email address will be composed from the first letter of first name, concatenated with the three first letters of last name, concatenated with @oracle.com.

MariaDB [case_study]> select first_name, last_name, concat(substr(first_name,1,1),substr(last_name,1,3),"@oracle.com") from employees;

b. For each employee, display the first name, last name, and email address. The email address will be composed from the first letter of first name, concatenated with the three last letters of last name, concatenated with @oracle.com.

MariaDB [case_study]> select first_name, last_name, concat(substr(first_name,1,1),substr(last_name,-3,3),"@oracle.com") from employees;

4. Using the CONCAT function 

a. For each employee, use the CONCAT function to display the first name concatenated with the last name.

MariaDB [case_study]> select concat(first_name, " ",last_name) from employees;

b. For each employee, use the CONCAT function to display the first name concatenated with the last name, concatenated with hire date.

MariaDB [case_study]> select concat(first_name, " ",last_name,"  ", hire_date) from employees;

5. Display the last name for all employees where last name’s length is greater than 8 characters.

MariaDB [case_study]> select last_name from employees where length(last_name) > 8;

6. Phone numbers: 
a. For each employee, display the first name, last name, phone number and a new phone number using the REPLACE function. in the new phone number replace all occurrences of 515 with 815. 

MariaDB [case_study]> select first_name, last_name, replace(phone_number, "515", "815") from employees;

7. For each employee, display : 

a. first name 
b. salary 
c. salary after a raise of 12% 
d. salary after a raise of 12%, expressed as a whole number (ROUND). 
e. salary after a raise of 12%, round down to the nearest whole number.

MariaDB [case_study]> select first_name, salary * 0.12
    -> as salary_after_rise, round(salary) as whole_number, floor(salary) as nearest_whole_number from employees;

MariaDB [case_study]> select first_name, salary * 0.12
    -> as salary_after_rise, round(salary * 0.12) as whole_number, floor(salary * 0.12) as nearest_whole_number from employees;

15. For each employee, display the first name, last name, salary, and a salary grade based on these conditions : 

a. if the salary is between 0 and 5000 – salary grade level is A 
b. if the salary is between 5001 and 15000 – salary grade level is B 
c. if the salary is between 15001 and 20000 – salary grade level is C 
d. for any other range – salary grade level is D

MariaDB [case_study]> select first_name, last_name, salary,
    -> case
    -> when salary between 0 and 5000 then "A"
    -> when salary between 5001 and 15000 then "B"
    -> when salary between 15001 and 20000 then "C"
    -> else "D"
    -> end as Salary_grade
    -> from employees;

                                       Problem Statements to be solved using – Basic Select Statements

1.Create a query to display the employee number, first name, last name, phone number and department number (Employees table).

MariaDB [case_study]> select employee_id, first_name, last_name, phone_number, department_id from employees;

2. Create a query to display the first name, last name, hire date, salary, and salary after a raise of 20%. Name the last column (salary after a raise) heading as “ANNUAL_SAL” (Employees table). 

MariaDB [case_study]> select first_name, last_name, hire_date, salary, salary * 0.20 as ANNUAL_SAL from employees;

3. Create a query to display the last name concatenated with the first name, separated by space, and the telephone number concatenated with the email address, separated by hyphen. Name the column headings “FULL_NAME” and “CONTACT_DETAILS” respectively (Employees tables).

MariaDB [case_study]> select concat(last_name," ",first_name) as FULL_NAME, concat(phone_number,"/", email) as CONTACT_DETAILS from employees;

4. Create a query to display the unique manager numbers from Employees table.

MariaDB [case_study]> select distinct(manager_id) from employees;

5. Create a query to display the last name concatenated with job_id column, separated by space. Name this column heading as “EMPLOYEE_AND_TITLE” (Employees table).

MariaDB [case_study]> select concat(last_name, " ", job_id) as EMPLOYEE_AND_TITLE from employees;

6. Create a query to display the first name, last name, salary, and hire date concatenated with the literal string “HD”, separated by space. Name the column headings “FN”, “LN”, “SAL”, and “HD” respectively (Employees table).

MariaDB [case_study]> select first_name as FN, last_name as LN, salary as SAL, concat(hire_date," ","HD") as HD from employees;

7. Create a query to display the unique salaries in Employees tables. 

MariaDB [case_study]> select distinct(salary) from employees;



                                       Problem Statements to be solved using – Group By



1. Display the lowest last name alphabetically (Employees table).

MariaDB [case_study]> select last_name from employees order by last_name desc;

2. Display the highest last name alphabetically (Employees table).

MariaDB [case_study]> select last_name from employees order by last_name;

3. Display the number of rows in Employees table.

MariaDB [case_study]> select count(employee_id) from employees;

4. Display the number of values (exclude NULLs) in commission_pct column (Employees table). 

MariaDB [case_study]> select count(commission_pct) from employees where commission_pct is not null;

5. Display the number of NULL values in commission_pct column (Employees table). 

MariaDB [case_study]> select count(*) from employees where commission_pct IS NULL;

6. Display the highest, lowest, and average salary.

MariaDB [case_study]> select max(salary), min(salary), avg(salary) from employees;



                                       Problem Statements to be solved using - GROUP BY and HAVING Clauses


7. Average salary per department 
a. Display the department number and average salary for each department. 
b. Modify your query to display the results only for departments 50 or 80.

MariaDB [case_study]> select avg(salary), department_id from employees group by department_id;

MariaDB [case_study]> select avg(salary), department_id from employees group by department_id having department_id in(50, 80);

8. Numer of employees per job id 

a. Display the job id and the number of employees for each job id. 
b. Modify your query to display the results only for employees whose salary is greater the 10000. 
c. Modify your query again, this time display the results only for jobs with more than 2 people. 

MariaDB [case_study]> select count(employee_id), job_id from employees group by job_id;

MariaDB [case_study]> select count(employee_id), job_id, salary from employees group by job_id having salary > 10000;

MariaDB [case_study]> select count(employee_id), job_id from employees group by job_id having count(employee_id) > 2;

9. Display the department number, job id, and the average salary for each department and job id. 

MariaDB [case_study]> select department_id, job_id, avg(salary) from employees group by department_id, job_id;

10. Managers and highest salary 

a. Display the manager number and the highest salary for each 
manager number. 
b. Modify your query to display the results only for employees whose salary is 
greater than 10000. 

MariaDB [case_study]> select manager_id, max(salary) from employees group by manager_id;

MariaDB [case_study]> select manager_id, salary from employees group by manager_id having salary > 10000;

11. Display the job id and minimum salary for each job id, for all jobs whose minimum salary is greater than 7000.

MariaDB [case_study]> select job_id, min(salary) from employees group by job_id having min(salary)>7000;

12. Display the department number, and the average salary for each department, for all departments whose number is in the range of 20 and 80, and their average salary is greater than 9000

MariaDB [case_study]> select department_id, avg(salary) > 9000 from employees group by department_id in(20,80);


                                       Problem Statements to be solved using – SQL Sub-Queries


1. Display the first name and salary for all employees who earn more than employee number 103 (Employees table). 

MariaDB [case_study]> select employee_id, first_name, salary from employees where salary > (select salary from employees where employee_id = 103);

2. Display the department number and department name for all departments whose location number is equal to the location number of department number 90 (Departments table).

MariaDB [case_study]> select department_id, department_name, location_id from departments where location_id = (select location_id from departments where department_id = 90);

3. Display the last name and hire date for all employees who was hired after employee number 101 (Employees table).

MariaDB [case_study]> select last_name, hire_date from employees where hire_date > (select hire_date from employees where employee_id = 101);

4. Display the first name, last name, and department number for all employees who work in Sales department (Employees and Departments table). 

MariaDB [case_study]> select first_name, last_name , department_id from employees where department_id = (select department_id from departments where department_name = "Sales");

5. Display the department number and department name for all departments located in Toronto (Departments table). 

MariaDB [case_study]> select department_id , department_name from departments where location_id = (select location_id from locations where city = "toronto");

6. Display the first name, salary and department number for all employees who work in the department as employee number 124 (Employees table). 

MariaDB [case_study]> select first_name, salary, department_id from employees where department_id = (select department_id from employees where employee_id = 124);

7. Display the first name, salary, and department number for all employees who earn more than the average salary (Employees table).

MariaDB [case_study]> select first_name, salary, department_id from employees where salary > (select avg(salary) from employees);

8. Display the first name, salary, and department number for all employees whose salary equals one of the salaries in department number 20 (Employees table).

MariaDB [case_study]> select first_name, salary, department_id from employees where salary = any (select salary from employees where department_id = 20);

9. Display the first name, salary, and department number for all employees who earn more than maximum salary in department number 50 (Employees table).

MariaDB [case_study]> select first_name, salary, department_id from employees where salary > (select min(salary) from employees where department_id = 60);


10. Display the first name, salary, and department number for all employees who earn more than the minimum salary in department number 60 (Employees table). 

12. Display the first name, salary and department number for all employees whose department is located Seattle (Employees, Departments and Locations table). 

MariaDB [case_study]> select first_name, salary, department_id from employees where department_id = any (select department_id from departments where location_id = (select location_id from locations where city = "seattle"));


13. Display the first name, salary, and department number for all employees who earn less than the average salary, and also work at the same department as employee whose first name is Kevin

MariaDB [case_study]> select first_name, salary, department_id from employees where salary < (select avg(salary) from employees where department_id = any (select department_id from employees where first_name = "Kevin"));


                                       Problem Statements to be solved using – Inner JOIN


1. Employees and departments (Employees & Departments tables)

a. For each employee, display the first name, last name, department number and department name. 

b. Display the first name, last name, department number and department name, for all employees in 
departments 50 or 90. 

MariaDB [case_study]> select emp.first_name, emp.last_name, emp.department_id, dept.department_name from
    -> employees as emp inner join departments as dept on
    -> emp.department_id = dept.department_id;

MariaDB [case_study]> select emp.first_name, emp.last_name, emp.department_id, dept.department_name from
    -> employees as emp inner join departments as dept on
    -> emp.department_id = dept.department_id where emp.department_id = 50 OR emp.department_id = 90;


2. Departments and locations (Departments, Employees & Locations tables) 

a. For each department, display the department name, city, and state province. 
b. For each employee, display the full name, department name, city, and state province.

MariaDB [case_study]> select dept.department_name, loc.city, loc.state_province from
    -> departments as dept inner join locations as loc on
    -> dept.location_id = loc.location_id;

MariaDB [case_study]> select * from
    -> employees as emp inner join departments as dept on
    -> emp.department_id = dept.department_id
    -> inner join locations as loc on dept.location_id = loc.location_id;


                                        Problem Statements to be solved using – Outer JOIN

4. Employees & departments 

a. Display the first name, last name, department number and department name, for all employees including those without any department. 
b. Modify your query to display all departments including departments without any employees.

MariaDB [case_study]> select emp.first_name, emp.last_name, dept.department_id, dept.department_name from
    -> employees as emp left outer join departments as dept on
    -> emp.department_id = dept.department_id;


MariaDB [case_study]> select emp.first_name, emp.last_name, dept.department_id, dept.department_name from
    -> employees as emp right outer join departments as dept on
    -> emp.department_id = dept.department_id;

 
                                       Problem Statements to be solved using – Self JOIN

5. Employees and managers (Employees table) 

a. For each employee, display the last name, and the manager’s last name. 
b. Modify your query to display all employees including those without any manager. 

MariaDB [case_study]> select emp1.employee_id, emp1.last_name, emp2.manager_id, emp2.last_name from
    -> employees as emp1, employees as emp2
    -> where emp1.employee_id = emp2.manager_id;

MariaDB [case_study]> select emp1.employee_id, emp1.last_name, emp2.manager_id, emp2.last_name from
    -> employees as emp1, employees as emp2
    -> where emp1.employee_id = emp2.manager_id is null;


6. Display the first name, last name, and department number for all employees who work in the 
same department as employee whose last name is “King”. 

MariaDB [case_study]> select first_name, last_name, department_id from employees where department_id = any(select department_id from employees where last_name = "King");


7. Display the last name and salary for all employees who earn less than employee number 103

MariaDB [case_study]> select last_name, salary from employees where salary < (select salary from employees where employee_id = 103);
